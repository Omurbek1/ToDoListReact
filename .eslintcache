[{"D:\\Js_Lessons\\9Week\\1repeat_all\\src\\App.js":"1","D:\\Js_Lessons\\9Week\\1repeat_all\\src\\index.js":"2","D:\\Js_Lessons\\9Week\\1repeat_all\\src\\component\\Header\\index.js":"3","D:\\Js_Lessons\\9Week\\1repeat_all\\src\\component\\List\\index.js":"4","D:\\Js_Lessons\\9Week\\1repeat_all\\src\\component\\Modal\\index.js":"5","D:\\Js_Lessons\\9Week\\1repeat_all\\src\\reportWebVitals.js":"6"},{"size":2494,"mtime":1609825363626,"results":"7","hashOfConfig":"8"},{"size":499,"mtime":1609824284322,"results":"9","hashOfConfig":"8"},{"size":912,"mtime":1609772468435,"results":"10","hashOfConfig":"8"},{"size":3462,"mtime":1609819293404,"results":"11","hashOfConfig":"8"},{"size":1767,"mtime":1609819712301,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1607685954682,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1xmmxtu",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"D:\\Js_Lessons\\9Week\\1repeat_all\\src\\App.js",["29"],"\nimport React, { useState, useEffect } from 'react'\nimport List from './component/List'\nimport Header from './component/Header'\nimport { makeStyles } from '@material-ui/core/styles';\nimport PostAddSharpIcon from '@material-ui/icons/PostAddSharp';\n\nimport './App.css'\n\n// style input\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '350px',\n      marginLeft: \"520px\",\n      height:'30px',\n      top:\"100px\"\n\n    },\n\n  },\n  button:{\n    width:'100px',\n    height:'30px',\n    marginLeft:'880px',\n    position:'absolute',\n    top:\"168px\"\n  },\n  body:{\n    // backgroundColor:\"#E4D713\",\n  }\n}));\nexport default function App() {\n  const [data, setData] = useState(JSON.parse(localStorage.getItem('todos')) || [])\n  const [value, setValue] = useState(\"\")\n\n  // style\n   \n   const updateTodo=allTodos=>{\n     setData(allTodos)\n   }\n   \n   const updatelocalStorage=todoList=>{\n     localStorage.setItem('todos',JSON.stringify(todoList))\n   }\n\nconst classes = useStyles();\n\n  const addTodo = (event) => {\n    event.preventDefault()\n\n\n    let todo = {\n      id: data.length ? data[data.length - 1].id + 1 : 1,\n      todo: value,\n      status: false\n    }\n\n\n    let arr = [...data, todo]\n    updateTodo(arr)\n    updatelocalStorage(arr)\n    setValue('')\n  }\n\n  const doneTodo = (id) => {\n    let todos = data\n    let todo = todos.findIndex(item => item.id === id)\n    todos[todo].status = true\n   updateTodo(todos)\n    updatelocalStorage(todos)\n  }\n\n  const deleteTodo = (id) => {\n    let todos = data.filter(todos => todos.id !== id)\n    updateTodo(todos)\n    updatelocalStorage(todos)\n  }\n\n  const save = (id, val) => {\n    let todos = data\n    let todo = todos.findIndex(item => item.id === id)\n    todos[todo].todo = val\n   updateTodo(todos)\n    updatelocalStorage(todos)\n  }\n\n  return (\n    <div>\n      <Header />\n      <form onSubmit={addTodo}  className={classes.body} >\n      <div  className={classes.root} noValidate autoComplete=\"off\">\n        <input type='text' value={value} id=\"standard-basic\" label=\"Standard\"   placeholder=\"Enter text\"\n        \n          onChange={(event) => {\n            setValue(event.target.value)\n          }}\n        />\n        \n      </div>\n      <button\n        className={classes.button}\n        ><PostAddSharpIcon/></button>\n        \n        \n      </form>\n      \n      <List\n        data={data}\n        done={doneTodo}\n        delete={deleteTodo}\n        save={save}\n      />\n      \n    </div>\n  )\n}","D:\\Js_Lessons\\9Week\\1repeat_all\\src\\index.js",[],"D:\\Js_Lessons\\9Week\\1repeat_all\\src\\component\\Header\\index.js",[],["30","31"],"D:\\Js_Lessons\\9Week\\1repeat_all\\src\\component\\List\\index.js",["32","33"],"import React, { useState } from 'react'\r\nimport Modal from '../Modal'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditSharpIcon from '@material-ui/icons/EditSharp';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\r\nimport './list.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    list: {\r\n        position: 'realtive',\r\n        width: '740px',\r\n        marginLeft: '30px',\r\n        borderRadius: '25%',\r\n        borderBottomRightRadius: '25%',\r\n        borderRadius: '50px',\r\n\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        \r\n    },\r\n    h3:{\r\n        marginLeft: '100px',\r\n        fontFamily: 'Bungee Inline cursive',\r\n        fontSize: '24px',\r\n        marginTop: '10px',\r\n    \r\n    }\r\n\r\n\r\n}));\r\n\r\nexport default function List(props) {\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [id, setId] = useState()\r\n    const [todo, setTodo] = useState('')\r\n\r\n    const classes = useStyles();\r\n\r\n    const edit = (todo, id) => {\r\n        setTodo(todo)\r\n        setShowModal(true)\r\n        setId(id)\r\n    }\r\n    return (\r\n        <div className='back'>\r\n            <div className={classes.list}  >\r\n                {props.data ?\r\n                    props.data.map(el => {\r\n                        return (\r\n                            <div key={el.id} style={el.status ?\r\n                                { background: '#FEAD59' } :\r\n                                { background: '#DB6B6B' }}>\r\n\r\n                                <h3 className={classes.h3}>{el.todo}</h3>\r\n                                {\r\n                                    el.status ? '' :\r\n                                        <Button onClick={() => props.done(el.id)}\r\n                                         variant=\"contained\"\r\n                                         color=\"secondary\"\r\n                                         className={classes.button}\r\n                                         startIcon={< CheckCircleSharpIcon />}>\r\n                                            Done</Button>\r\n                                }\r\n                               \r\n                                <Button onClick={() => props.delete(el.id)}\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<DeleteIcon />}\r\n                                >Delete </Button>\r\n                                <Button onClick={() => edit(el.todo, el.id)}\r\n                                         variant=\"contained\"\r\n                                         color=\"secondary\"\r\n                                         className={classes.button}\r\n                                         startIcon={<  EditSharpIcon />}>\r\n                                            Done</Button>\r\n                            </div>\r\n\r\n                        )\r\n                    })\r\n                    : null\r\n                }\r\n                <Modal\r\n                    name={todo}\r\n                    showModal={showModal}\r\n                    setShowModal={setShowModal}\r\n                    id={id}\r\n                    save={props.save}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Js_Lessons\\9Week\\1repeat_all\\src\\component\\Modal\\index.js",[],"D:\\Js_Lessons\\9Week\\1repeat_all\\src\\reportWebVitals.js",[],{"ruleId":"34","severity":1,"message":"35","line":2,"column":27,"nodeType":"36","messageId":"37","endLine":2,"endColumn":36},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"34","severity":1,"message":"42","line":6,"column":8,"nodeType":"36","messageId":"37","endLine":6,"endColumn":12},{"ruleId":"43","severity":1,"message":"44","line":19,"column":9,"nodeType":"45","messageId":"46","endLine":19,"endColumn":21},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["47"],"no-negated-in-lhs",["48"],"'Icon' is defined but never used.","no-dupe-keys","Duplicate key 'borderRadius'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]